<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>510</x>
      <y>90</y>
      <w>186</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>Collidable
--
mMask : ConvexShape
onCollide : boost::signal

--
addOnCollide( func_ptr(this,other) : void )
removeOnCollide( func_ptr(this,other) : void )

pure virtual onCollision(Collidable other) : void

getMask() : sf::ConvexShape
setMask() : void
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>90</y>
      <w>174</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>Actor
--
mAnimator : thor::animator
mVisible : bool

--
addAnimation( )
animate( elapsedTime : Time ) : void
draw( target : RenderTarget ) : void

isPlayingAnimation() : bool
playAnimation( name : string ) : void
getPlayingAnimation() : string
stopAnimation() : void

getVisible() : bool
setVisible( visible : bool ) : void
toggleVisible() : bool

bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>774</x>
      <y>54</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>sf::Sprite

bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>690</x>
      <y>168</y>
      <w>42</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>798</x>
      <y>66</y>
      <w>18</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>912</x>
      <y>90</y>
      <w>276</w>
      <h>528</h>
    </coordinates>
    <panel_attributes>Pawn
--
mDisplayDirection : DisplayDirection
mDestination : Vec2
mMovementSpeed : int
mState : State
mStunDuration : Time
mTravelDirection : Vec2

mHealth : int
mArmour : DamageReduction
mMagicResist : DamageReduction

mAttackDamage : int
mAttackSpeed : float
mAttackType : DamageType

onStateChanged : boost::signal
onDecayed : boost::signal
mDecayed : bool
mDecayTime : Time
--
update( elapedTime : Time ) : void
turnToFaceDestination() : void
decay( elapsedTime : Time ) : void
hasDecayed() : bool
heal(amount : int)
kill() : void

getDestination() : Vec2
setDestination( dest : Vec2 ) : void
getMovementSpeed() : int
setMovementSpeed( newSpeed : int ) : void
getState() : State
setState( newState : State ) : void
stun( duration : Time ) : void

getArmour() : DamageReduction
getMagicResist() : DamageReduction

grantArmour() : void
stripArmour() : void

grantMagicResist() : void
stripMagicResist() : void

getDamageType() : DamageType
setDamageType( type : DamageType ) : void

getAttackDamage() : int
setAttackDamage( damage : int) : void
getAttackSpeed() : float
setAttackSpeed( speed : float ) : void

takeDamage(amount : int, type : DamageType) : bool
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>888</x>
      <y>168</y>
      <w>36</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>750</x>
      <y>588</y>
      <w>144</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>Returns true if damage killed Pawn
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>888</x>
      <y>588</y>
      <w>36</w>
      <h>24</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;40.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1104</x>
      <y>294</y>
      <w>78</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>State
--
IDLE
MARCHING
ATTACKING
STUNNED
DYING
DEAD
bg=orange
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1104</x>
      <y>462</y>
      <w>78</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>DamageType
--
PHYSICAL
MAGICAL
bg=orange
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1104</x>
      <y>378</y>
      <w>78</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>DamageReduction
--
NONE = 1.0
LIGHT = 0.75
MEDIUM = 0.5
HEAVY = 0.25
IMMUNE = 0.0
bg=orange
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1188</x>
      <y>396</y>
      <w>84</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Multiply incoming damage by the relevant value
bg=orange
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1104</x>
      <y>540</y>
      <w>78</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>DisplayDirection
--
NORTH
SOUTH
EAST
WEST
bg=orange
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1182</x>
      <y>156</y>
      <w>120</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1182</x>
      <y>492</y>
      <w>120</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1290</x>
      <y>90</y>
      <w>174</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>Hero
--
mAbility : Ability



--
activateAbility() : void


bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1500</x>
      <y>90</y>
      <w>108</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>Ability
--
mScriptPath : string

--
execute(caster) : void

bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1500</x>
      <y>42</y>
      <w>108</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>Register anything needed with chaiscript in constructor
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1458</x>
      <y>108</y>
      <w>54</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1290</x>
      <y>372</y>
      <w>180</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>Minion
--
mFaction : Faction


--
calculateBehaviour( currentState ) &lt;&lt; chai
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>402</y>
      <w>24</w>
      <h>24</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;20.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>474</x>
      <y>678</y>
      <w>1164</w>
      <h>552</h>
    </coordinates>
    <panel_attributes>Scenes
--
bg=gray


layer=-2
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1296</x>
      <y>492</y>
      <w>78</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Faction
--
PLAYER
ENEMY
NEUTRAL
bg=orange
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1290</x>
      <y>330</y>
      <w>180</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>Pass behaviour script path to constructor and, like Ability class, register anything needed there.
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1476</x>
      <y>420</y>
      <w>96</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>ChaiScript function ptr
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1446</x>
      <y>414</y>
      <w>42</w>
      <h>24</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;50.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>474</x>
      <y>0</y>
      <w>1164</w>
      <h>654</h>
    </coordinates>
    <panel_attributes>Units
--
bg=gray
fg=blue

layer=-2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>582</x>
      <y>756</y>
      <w>216</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
SceneManager
--
mScenes : map&lt;string, I_Scene&gt;
mCurrentScene : string

--
getCurrentScene() : string
getEditableScene() : I_Scene

addScene(name : string, scene : I_Scene) : void

updateCurrentScene( elapsedTime : sf::Time ) : void
drawCurrentScene( target : sf::RenderTarget ) : void
passEventToCurrentScene( evnt : sf::Event ) : bool

navigateToScene( name : string ) : void
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>822</x>
      <y>1050</y>
      <w>210</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
/I_Scene/
--
pure virtual update(elapsedTime : sf::Time) : void
pure virtual draw(target : sf::RenderTarget) : void
pure virtual void handleEvent( evnt : sf::Event ) : bool
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>582</x>
      <y>1062</y>
      <w>174</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>returns true if the event was handled and no further processing is required. (i.e. don't pass the event to anything else)
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>774</x>
      <y>876</y>
      <w>24</w>
      <h>222</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;20.0;20.0;20.0;350.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>750</x>
      <y>1074</y>
      <w>84</w>
      <h>24</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>120.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>822</x>
      <y>762</y>
      <w>216</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>Level
--
mEnemies : collection&lt;Minion&gt;
mHero : Hero

--
static LoadFromXML( path : string ) : Level

override update(...)
override draw(...)
override handleEvent(...)
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>924</x>
      <y>918</y>
      <w>18</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>792</x>
      <y>840</y>
      <w>42</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1032</x>
      <y>228</y>
      <w>270</w>
      <h>564</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;920.0;90.0;920.0;90.0;740.0;410.0;740.0;410.0;460.0;400.0;460.0;400.0;440.0;410.0;440.0;410.0;10.0;430.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>264</x>
      <y>552</y>
      <w>168</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
Game
--
mUpdateThread : Thread
mDrawThread : Thread
mRun : bool
mWindow : sf::RenderWindow

--
run() : int
layer=-1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>180</x>
      <y>624</y>
      <w>84</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>Call from main:
*return Game.run();*
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>204</x>
      <y>576</y>
      <w>60</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Initialise chai engine, etc in constructor
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>264</x>
      <y>384</y>
      <w>168</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
ResourceManager
--
mTextures : map&lt;string,sf::Texture&gt;

--
loadTexture( path : string ) : void
findTexture( name : string ) : Texture</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1032</x>
      <y>564</y>
      <w>282</w>
      <h>234</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;370.0;100.0;370.0;100.0;190.0;450.0;190.0;450.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>270</x>
      <y>648</y>
      <w>156</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>In the constructor, create menu/levels for sceneManager; syntax:
*addScene(new Level::FromXML(...))*
/or/
*addScene(new Menu(...))*

In run(), we setup a game loop (using mRun as conditional).
Every loop, poll for events, passing them to the SceneManager.
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1056</x>
      <y>816</y>
      <w>192</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>Menu
--
mItems : vector&lt; pair&lt;sf::Text, func_ptr(string) &gt; &gt;
mSelectedItem : iterator

mItemSpacing : int
mFont : sf::Font
mMainColor : Color
mHiliteColor : Color
--
addItem( text : string, func_ptr(string) ) : void
moveUp() : void
moveDown() : void
select() : void

getMainColor() : Color
getHilitColor() : Color
setMainColor( Color ) : void
setHiliteColor( Color ) : void

override update(...)
override draw(...)
override handleEvent(...)
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1026</x>
      <y>1026</y>
      <w>132</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;200.0;60.0;200.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>792</x>
      <y>942</y>
      <w>276</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;220.0;20.0;220.0;10.0;240.0;10.0;240.0;20.0;440.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>108</x>
      <y>408</y>
      <w>156</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>In my 3rd year project, the texture map was contained inside level, but what happened then was that textures were level specific and, if the same texture was used in multiple levels, it had to be reloaded each time.
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1374</x>
      <y>714</y>
      <w>228</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>Future Sprints
--
layer=1
bg=dark_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1398</x>
      <y>798</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>OverworldMap
layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1398</x>
      <y>750</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>/I_Scene/

layer=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1422</x>
      <y>762</y>
      <w>18</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
layer=3
bg=light_gray</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>474</x>
      <y>1254</y>
      <w>594</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>Quadtree
--
bg=gray


layer=-2
fg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>486</x>
      <y>1272</y>
      <w>54</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>tree.hh
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>552</x>
      <y>1272</y>
      <w>126</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>external library for n-ary trees
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>534</x>
      <y>1266</y>
      <w>30</w>
      <h>24</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;30.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>648</x>
      <y>1308</y>
      <w>108</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Node
--
x : short
y : short
width : short
height : short
--
terrainTypes : array&lt;char&gt;
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>624</x>
      <y>1332</y>
      <w>36</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>486</x>
      <y>1308</y>
      <w>144</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
TerrainQuadTree
--
mTree : tree&lt; node &gt;

--
init( terrain : sf::Texture ) : void
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>690</x>
      <y>1290</y>
      <w>174</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>NoteToSelf &gt;&gt; find a better way of doing this
bg=orange
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>756</x>
      <y>1314</y>
      <w>48</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>Be wary of how much memory the tree is using!
bg=orange
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>1284</y>
      <w>18</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>486</x>
      <y>1458</y>
      <w>288</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
PathfindingService
--


--
pathAstar( loc : Vec2, dest : Vec2, restrictions : array&lt;char&gt; ) : Path
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>648</x>
      <y>1386</y>
      <w>126</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
Path
--
mNodes : collection&lt;Node&gt;
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
